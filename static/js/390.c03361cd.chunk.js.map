{"version":3,"file":"static/js/390.c03361cd.chunk.js","mappings":"sNAGaA,EAAOC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8DAMhBC,EAAWH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,4JASpBG,GAAWL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAYO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,wEAMvBM,EAAQR,EAAAA,GAAAA,IAAUS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,kEAMlBQ,EAAQV,EAAAA,GAAAA,GAASW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,yGAKnB,SAAAU,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAK,I,SC7BvBC,EAAa,SAAHC,GAAoB,IAAdC,EAAMD,EAANC,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACEC,EAAAA,EAAAA,KAACtB,EAAI,CAAAuB,SACFJ,EAAOK,KAAI,SAAAC,GAAA,IAAGC,EAAKD,EAALC,MAAOC,EAAIF,EAAJE,KAAMC,EAAEH,EAAFG,GAAIC,EAAWJ,EAAXI,YAAW,OACzCP,EAAAA,EAAAA,KAAClB,EAAQ,CAAAmB,UACPO,EAAAA,EAAAA,MAACxB,EAAQ,CAACyB,GAAE,WAAAC,OAAaJ,GAAMK,MAAO,CAAEC,KAAMd,GAAWG,SAAA,EACvDD,EAAAA,EAAAA,KAACb,EAAK,CACJ0B,IACEN,EAAW,kCAAAG,OAC2BH,GAZpD,4HAeYO,IAAKV,KAEPJ,EAAAA,EAAAA,KAACX,EAAK,CAAAY,SAAEG,GAASC,QAVNC,EAYJ,KAInB,C,sGCzBaS,EAAOpC,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sCAIlBQ,EAAQV,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,iC,mKCJjBmC,EAAOrC,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kCAIlBoC,EAAQtC,EAAAA,GAAAA,MAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,iC,SCHpBqC,EAAa,WACxB,IAAAC,GAAsBC,EAAAA,EAAAA,MAAbC,GAA8BC,EAAAA,EAAAA,GAAAH,EAAA,GAArB,GAQlB,OACEX,EAAAA,EAAAA,MAACQ,EAAI,CAACO,SAPa,SAAAC,GACnBA,EAAIC,iBACJ,IAAMC,EAAcF,EAAIG,OAAOC,SAASC,MAAMC,MAC9CT,EAAU,CAAEU,MAAOL,GACrB,EAG+BzB,SAAA,EAC3BD,EAAAA,EAAAA,KAACiB,EAAK,CACJe,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,GACZ9B,KAAK,QACL+B,UAAQ,KAEVpC,EAAAA,EAAAA,KAAA,UAAQgC,KAAK,SAAQ/B,SAAC,aAG5B,E,0BChBe,SAASoC,IAAU,IAADC,EAC/BC,GAA0CC,EAAAA,EAAAA,UAAS,IAAGC,GAAAnB,EAAAA,EAAAA,GAAAiB,EAAA,GAA/CG,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACtCtB,GAAiBC,EAAAA,EAAAA,MACXW,EAA2B,QAAtBO,GADuBhB,EAAAA,EAAAA,GAAAH,EAAA,GAArB,GACQyB,IAAI,gBAAQ,IAAAN,EAAAA,EAAI,GACrCO,GAA8BL,EAAAA,EAAAA,WAAS,GAAMM,GAAAxB,EAAAA,EAAAA,GAAAuB,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAA0BT,EAAAA,EAAAA,WAAS,GAAMU,GAAA5B,EAAAA,EAAAA,GAAA2B,EAAA,GAAlCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAoBtB,OAlBAG,EAAAA,EAAAA,YAAU,WAKuB,SAAAC,IAS9B,OAT8BA,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAA/B,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAE8BC,EAAAA,EAAAA,IAAmBhC,GAAO,KAAD,EAAA2B,EAAAE,EAAAI,KAA3CL,EAAOD,EAAPC,QACRhB,EAAiBgB,GAASC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAE1BR,EAAQQ,EAAAK,IAAQ,QAEE,OAFFL,EAAAC,KAAA,GAEhBb,GAAW,GAAOY,EAAAM,OAAA,6BAAAN,EAAAO,OAAA,GAAAV,EAAA,yBAErBW,MAAA,KAAAC,UAAA,CAba,KAAVtC,IAEJiB,GAAW,GACXI,GAAS,GAAO,WACeE,EAAAc,MAAC,KAADC,UAAA,CAU/BC,GACF,GAAG,CAACvC,KAGFvB,EAAAA,EAAAA,MAACO,EAAAA,EAAI,CAAAd,SAAA,EACHD,EAAAA,EAAAA,KAACkB,EAAU,IACVwB,EAAc6B,OAAS,IAAKvE,EAAAA,EAAAA,KAACL,EAAAA,EAAU,CAACE,OAAQ6C,IAChDK,IAAW/C,EAAAA,EAAAA,KAACwE,EAAAA,EAAM,IAClBrB,IAASnD,EAAAA,EAAAA,KAACyE,EAAAA,EAAK,MAGtB,C","sources":["components/movieList/MovieList.styled.js","components/movieList/MovieList.jsx","pages/home/Home.styled.js","components/searchForm/SearchForm.styled.js","components/searchForm/SearchForm.jsx","pages/movie.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  width: calc((100vw - 160px) / 5);\n\n  border-radius: 5px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  overflow: hidden;\n`;\n\nexport const LinkItem = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  width: 275px;\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 413px;\n  object-fit: cover;\n`;\n\nexport const Title = styled.h2`\n  text-align: center;\n  margin: auto;\n  padding: 10px 0;\n  font-size: 16px;\n  color: ${p => p.theme.colors.black};\n`;","import { useLocation } from 'react-router-dom';\nimport { List, ListItem, LinkItem, Image, Title } from './MovieList.styled';\n\nconst defaultImg =\n  'https://kartinki.pics/uploads/posts/2021-11/1636576247_22-kartinkin-net-p-kinokompaniya-art-pikchers-krasivie-arti-27.jpg';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <List>\n      {movies.map(({ title, name, id, poster_path }) => (\n        <ListItem key={id}>\n          <LinkItem to={`/movies/${id}`} state={{ from: location }}>\n            <Image\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                  : defaultImg\n              }\n              alt={title}\n            />\n            <Title>{title || name}</Title>\n          </LinkItem>\n        </ListItem>\n      ))}\n    </List>\n  );\n};","import styled from 'styled-components';\n\nexport const Main = styled.main`\n  padding: 10px 30px 30px;\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 10px;\n`;","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  margin-bottom: 10px;\n`;\n\nexport const Input = styled.input`\n  margin-right: 10px;\n`;","import { Form, Input } from './SearchForm.styled';\nimport { useSearchParams } from 'react-router-dom';\n\nexport const SearchForm = () => {\n  const [, setParams] = useSearchParams();\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const searchValue = evt.target.elements.input.value;\n    setParams({ query: searchValue });\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"\"\n        name=\"input\"\n        required\n      />\n      <button type=\"submit\">Search</button>\n    </Form>\n  );\n};","import { MoviesList } from '../components/movieList/MovieList';\nimport { useEffect, useState } from 'react';\nimport { fetchMoviesByQuery } from '../tmdbAPI';\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchForm } from 'components/searchForm/SearchForm';\nimport { Main } from './home/Home.styled';\nimport { Loader } from '../components/loader/Loader';\nimport { Error } from '../components/error/Error';\n\nexport default function Movies() {\n  const [moviesByQuery, setMoviesByQuery] = useState([]);\n  const [params] = useSearchParams();\n  const query = params.get('query') ?? '';\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    if (query === '') return;\n\n    setLoading(true);\n    setError(false);\n    async function getMoviesByQuery() {\n      try {\n        const { results } = await fetchMoviesByQuery(query);\n        setMoviesByQuery(results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n    getMoviesByQuery();\n  }, [query]);\n\n  return (\n    <Main>\n      <SearchForm />\n      {moviesByQuery.length > 0 && <MoviesList movies={moviesByQuery} />}\n      {loading && <Loader />}\n      {error && <Error />}\n    </Main>\n  );\n}"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","ListItem","_templateObject2","LinkItem","Link","_templateObject3","Image","_templateObject4","Title","_templateObject5","p","theme","colors","black","MoviesList","_ref","movies","location","useLocation","_jsx","children","map","_ref2","title","name","id","poster_path","_jsxs","to","concat","state","from","src","alt","Main","Form","Input","SearchForm","_useSearchParams","useSearchParams","setParams","_slicedToArray","onSubmit","evt","preventDefault","searchValue","target","elements","input","value","query","type","autoComplete","autoFocus","placeholder","required","Movies","_params$get","_useState","useState","_useState2","moviesByQuery","setMoviesByQuery","get","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","useEffect","_getMoviesByQuery","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$fetchMoviesByQ","results","_context","prev","next","fetchMoviesByQuery","sent","t0","finish","stop","apply","arguments","getMoviesByQuery","length","Loader","Error"],"sourceRoot":""}